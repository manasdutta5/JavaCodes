/*
// Problem link: https://practice.geeksforgeeks.org/problems/height-of-spiral-tree/1/#
// Video solution link: https://youtu.be/bCUSbEYWv-o
*/




class Tree
{
    // Return the height of the given special binary tree

    public static boolean isLeaf(Node node)
    {
        if(node.left != null && node.right != null)
        if(node.left.right == node && node.right.left == node) return true;
        return false;
    }

    public static int findTreeHeight(Node root)
        {
            // code here.
            if(root==null) return 0;
            if(isLeaf(root)) return 1;
            return 1 + Math.max(findTreeHeight(root.left),findTreeHeight(root.right));
        }
}